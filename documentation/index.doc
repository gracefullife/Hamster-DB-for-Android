/*
 * Copyright (C) 2005-2009 Christoph Rupp (chris@crupp.de), 
 * Ger Hobbelt (ger@hobbelt.com).
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or 
 * (at your option) any later version.
 *
 * See files COPYING.* for License information.


NOTE: I wanted all pages to appear on the 'Related Pages' tab, and then it turns out that \subpage does not do that, while \ref does. Maybe I FUBARed, I don't know. This is a quick hack to show a case in point anyway.

 */
/*! \page index 

\if logo_on
\htmlonly
<div style="center">
<img lowsrc="hamsterdb-main-low.jpg" src="hamsterdb-main.jpg" alt="hamsterdb embedded database engine:
	Simple to use, fast and versatile. Runs 
	directly in the application that uses it, and does not 
	need a separate database server. With support 
	for transactions, variable length keys, database cursors and 
	in-memory databases." style="padding-bottom: 1em;">
<br>
Version: $(VERSION)
</div>
\endhtmlonly
\endif

<h2>What is hamsterdb Embedded Storage?</h2>

hamsterdb Embedded Storage is a lightweight embedded database engine. It 
concentrates on ease of use, high performance, stability and portability.

Please visit the <a href="http://hamsterdb.com/about">About</a> page for 
more information.

<h2>Documentation</h2>

This manual is divided into three parts, each of which is divided into 
several sections.

The first part offers general information about hamsterdb:
<ul>
<li>The <a href="http://www.hamsterdb.com/about/features">features</a> page lists all major features of hamsterdb.
<li>The <a href="http://www.hamsterdb.com/download">download</a> page for downloading hamsterdb sources or precompiled libraries.
<li>The <a href="http://www.hamsterdb.com/about/platforms">supported platforms</a> page lists platforms for which hamsterdb was ported.
<li>The <a href="http://www.hamsterdb.com/licensing">licensing</a> page explains open source and commercial licensing options.
<li>The \ref history section shows what has changed during the development of hamsterdb and what is in store for future releases.
</ul>

The second part forms a reference manual:

<ul>
<li>The <a href="modules.html">Modules</a> page is the entry point for the hamsterdb C/C++ API reference.
<li>The hamsterdb Samples for C/C++, Python, .NET, Java and other supported languages are now online <a href="http://hamsterdb.com/confluence/display/ham/Samples" />here</a>.
<li>Section \ref starting tells you how to generate your first hamsterdb application quickly. 
<li>Section \ref faq "FAQ" 
<li>The FAQ gives answers to frequently asked questions. You can find questions and answers online <a href="http://hamsterdb.com/confluence/display/ham/FAQ" />here</a>.
</ul>

The third part provides internal architectural and library implementation information 
for those developers who have a technology itch they need to scratch. This part is targeted
at those people who have special needs and need (or want) to extend the hamsterdb library
itself.

\remark When you just wish to \e use hamsterdb, reading this third part of the manual 
would very probably be overkill.

Additional information is listed here:

<ul>
<li>\ref appendix_gpl2 
<li>\ref appendix_gpl3
<li>\ref appendix_gnu_free_doc_license
</ul>
	   
<h2>Acknowledgements</h2>
\addindex acknowledgements
Thanks go to:
\include AUTHORS

\example db1.c Simple example of creating a Database, inserting some items, search for these items and erase them 
\example db2.c Uses a Cursor to copy one Database to another; this can also be used to copy an In-Memory Database into a file Database and vice versa
\example db3.c Demonstrates how to use hamsterdb Embedded Storage for sorting large amounts of data
\example db4.c Demonstrates the use of Record Number Databases; reads a text file from stdin and creates a Database entry for every word. Then prints all words in the original order.
\example db5.c Demonstrates the use of duplicate items; reads a text file from stdin and creates a Database entry for every word, even if the word is a duplicate. Then prints all words in alphabetical order and prints the line number of each occurrence.
\example db6.cpp Same as db1.c, but written in C++
\example env1.c Shows how to use Environments; creates two Databases to manage Customers and Orders
\example env2.c Shows how to use Environments; creates two Databases to manage Customers and Orders, and a third Database with duplicate keys for the 1:n relation.
\example env3.cpp Same as env2.c, but written in C++


*/

